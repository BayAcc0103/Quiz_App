@page "/teacher/changepassword"
@using BlazingQuiz.Shared.DTOs
@inject IAuthApi AuthApi
@inject IAppState AppState
@inject NavigationManager NavigationManager

<BackButton />

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Change Password</h4>
                </div>
                <div class="card-body">
                    <EditForm Model="_changePasswordDto" OnValidSubmit="ChangePasswordAsync">
                        <DataAnnotationsValidator />
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Current Password</label>
                            <InputText id="currentPassword" type="password" class="form-control" @bind-Value="_changePasswordDto.CurrentPassword" />
                            <ValidationMessage For="@(() => _changePasswordDto.CurrentPassword)" />
                        </div>
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <InputText id="newPassword" type="password" class="form-control" @bind-Value="_changePasswordDto.NewPassword" />
                            <ValidationMessage For="@(() => _changePasswordDto.NewPassword)" />
                        </div>
                        <div class="mb-3">
                            <label for="confirmNewPassword" class="form-label">Confirm New Password</label>
                            <InputText id="confirmNewPassword" type="password" class="form-control" @bind-Value="_changePasswordDto.ConfirmNewPassword" />
                            <ValidationMessage For="@(() => _changePasswordDto.ConfirmNewPassword)" />
                        </div>
                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-secondary" @onclick="GoBack">Cancel</button>
                            <button type="submit" class="btn btn-primary">Change Password</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ChangePasswordDto _changePasswordDto = new ChangePasswordDto();

    private async Task ChangePasswordAsync()
    {
        try
        {
            // Validate passwords match
            if (_changePasswordDto.NewPassword != _changePasswordDto.ConfirmNewPassword)
            {
                AppState.ShowAlert("New password and confirm password do not match.", AlertType.Error);
                return;
            }

            AppState.ShowLoader("Changing password...");
            await AuthApi.ChangePasswordAsync(_changePasswordDto);
            AppState.ShowAlert("Password changed successfully!", AlertType.Success);
            
            // Reset form
            _changePasswordDto = new ChangePasswordDto();
        }
        catch (Exception ex)
        {
            AppState.ShowAlert($"Error changing password: {ex.Message}", AlertType.Error);
        }
        finally
        {
            AppState.HideLoader();
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/teacher/profile");
    }
}