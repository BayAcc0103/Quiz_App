@page "/student/home"

@inject IAppState AppState  
@inject ICategoryApi CategoryApi
@inject IStudentQuizApi StudentQuizApi
@inject NavigationManager NavigationManager
@inject QuizState QuizState

<div class="container">
    <div class="row">
        <div class="col-sm-3 ms-auto">
            <label class="form-label">Select Category</label>
            <select class="form-control" @bind="_selectedCategoryId" @bind:after="OnSelectedCategoryChanged">
                <option value="0">Select Category</option>
                @foreach (var category in _categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </div>
    </div>

    <div class="row">
        @if(!_isLoading && _quizes.Length == 0)
        {
            var message = _selectedCategoryId == 0 ? "Select a category to view quizes." : "No quizes available for this category.";
            <div class="col-sm-12 text-center">
                <h5 class="text-danger">@message</h5>
            </div>
        }
        else
        {
            @foreach (var q in _quizes)
            {
                <div class="col-sm-4">
                    <div class="box bg-white p-3">
                        <h5 class="fw-bold">@q.Name</h5>
                        <hr />
                        <table class="table">
                            <tr>
                                <td>
                                    <label class="fw-bold">Category</label>
                                </td>
                                <td>
                                    <span>@q.CategoryName</span>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label class="fw-bold">Number of Questions</label>
                                </td>
                                <td>
                                    <span>@q.TotalQuestions question(s)</span>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label class="fw-bold">Total Time</label>
                                </td>
                                <td>
                                    <span>@q.TimeInMinutes minute(s)</span>
                                </td>
                            </tr>
                        </table>
                        <hr />
                        <button type="button" class="btn btn-sm btn-warning" @onclick="() => _startingQuiz = q">Start Quiz</button>
                    </div>
                </div>
            }
        }    
    </div>
</div>

@if(_startingQuiz != null)
{
    var title = $"Starting Quiz: {_startingQuiz.Name}?";
    <Modal Title="@title" OnCancelClick="() => _startingQuiz = null" OnActionButtonClick="StartQuiz">
        <p class="m-0 p-3">
            Are you sure you want to start the quiz?<br/>
            You will not able to pause the quiz
        </p>
    </Modal>
}

@code {
    private CategoryDto[] _categories = [];
    private QuizListDto[] _quizes = [];
    private int _selectedCategoryId;
    private bool _isLoading;
    private QuizListDto? _startingQuiz;
    protected override async Task OnInitializedAsync()
    {
        AppState.ShowLoader("Loading categories and quizes...");
        try
        {
            _isLoading = true;
            var categoriesTask = CategoryApi.GetCategoriesAsync();
            //Load/Fetch quizes
            _quizes = await StudentQuizApi.GetActiveQuizesAsync(_selectedCategoryId);
            _categories = await categoriesTask;
        }
        catch (Exception ex)
        {
            throw;
        }
        finally
        {
            AppState.HideLoader();
            _isLoading = false;
        }
    }
    private async Task OnSelectedCategoryChanged()
    {
        AppState.ShowLoader("Loading quizes...");
        _quizes = await StudentQuizApi.GetActiveQuizesAsync(_selectedCategoryId);
        AppState.HideLoader();
    }

    private void StartQuiz()
    {
        QuizState.SetQuiz(_startingQuiz);
        NavigationManager.NavigateTo("student/quiz");     
    }
}
