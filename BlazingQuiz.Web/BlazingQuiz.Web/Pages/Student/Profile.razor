@page "/student/profile"
@using BlazingQuiz.Shared
@using BlazingQuiz.Shared.DTOs
@using BlazingQuiz.Web.Apis
@inject IAuthApi AuthApi
@inject IAppState AppState
@inject QuizAuthStateProvider QuizAuthStateProvider
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Student Profile</h4>
                </div>
                <div class="card-body">
                    @if (_isLoading)
                    {
                        <div class="text-center">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    }
                    else if (_error != null)
                    {
                        <div class="alert alert-danger" role="alert">
                            @_error
                        </div>
                    }
                    else
                    {
                        <EditForm Model="_userDto" OnValidSubmit="UpdateProfileAsync">
                            <DataAnnotationsValidator />
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="name" class="form-label">Name</label>
                                    <InputText id="name" class="form-control" @bind-Value="_userDto.Name" />
                                    <ValidationMessage For="@(() => _userDto.Name)" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="email" class="form-label">Email</label>
                                    <InputText id="email" type="email" class="form-control" @bind-Value="_userDto.Email" />
                                    <ValidationMessage For="@(() => _userDto.Email)" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <InputText id="phone" class="form-control" @bind-Value="_userDto.Phone" />
                                    <ValidationMessage For="@(() => _userDto.Phone)" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="role" class="form-label">Role</label>
                                    <InputText id="role" class="form-control" @bind-Value="_role" disabled="true" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="status" class="form-label">Status</label>
                                    <InputText id="status" class="form-control" @bind-Value="_status" disabled="true" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="id" class="form-label">ID</label>
                                    <InputText id="id" class="form-control" @bind-Value="_userId" disabled="true" />
                                </div>
                            </div>
                            <div class="d-flex justify-content-between">
                                <button type="submit" class="btn btn-primary">Update Profile</button>
                                <button type="button" class="btn btn-secondary" @onclick="ChangePassword">Change Password</button>
                            </div>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserDto _userDto = new UserDto(0, "", "", "", false);
    private bool _isLoading = true;
    private string? _error;
    private string _role = "";
    private string _status = "";
    private string _userId = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadProfileAsync();
    }

    private async Task LoadProfileAsync()
    {
        try
        {
            _isLoading = true;
            _userDto = await AuthApi.GetProfileAsync();
            
            // Set display values
            _role = QuizAuthStateProvider.User?.Role ?? "Student";
            _status = _userDto.IsApproved ? "Approved" : "Pending Approval";
            _userId = _userDto.Id.ToString();
        }
        catch (Exception ex)
        {
            _error = $"Error loading profile: {ex.Message}";
        }
        finally
        {
            _isLoading = false;
        }
    }

    private async Task UpdateProfileAsync()
    {
        try
        {
            AppState.ShowLoader("Updating profile...");
            await AuthApi.UpdateProfileAsync(_userDto);
            AppState.ShowAlert("Profile updated successfully!", AlertType.Success);
        }
        catch (Exception ex)
        {
            AppState.ShowAlert($"Error updating profile: {ex.Message}", AlertType.Error);
        }
        finally
        {
            AppState.HideLoader();
        }
    }

    private void ChangePassword()
    {
        // Navigate to change password page
        var currentUri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.NavigateTo($"/student/changepassword");
    }
}