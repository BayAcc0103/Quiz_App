@page "/admin/manage-categories"

@inject ICategoryApi CategoryApi

<div class="container">
    <h1>Manage Categories</h1>
    <hr/>
    <div class="row">
        <div class="col-sm-3">
            <EditForm Model="_category" OnValidSubmit="SaveCategoryAsync">
                <DataAnnotationsValidator/>
                <div class="card">
                    <div class="card-header">
                        <h4 class="m-0">Add/Edit Category</h4>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="form-label">
                                    Category Name
                                </label>
                                <InputText @bind-Value="_category.Name" class="form-control form-control-sm" placeholder="Enter category name" />
                                <ValidationMessage For="() => _category.Name" />
                            </div>
                            @if(_errorMessage != null)
                            {
                                <div class="mb-3 border-danger border-1 d-flex justify-content-between gap-2">
                                    <p class="m-0">@_errorMessage</p>
                                    <button type="button" class="btn btn-sm btn-danger" @onclick="() => _errorMessage = null">X</button>
                                </div>
                            }
                            <div class="card-footer d-flex justify-content-between align-items-center">
                                @if(!_isBusy)
                                {
                                    <button type="button" class="btn btn-sm btn-danger" @onclick="() => _category = new()">Cancel</button>
                                    <button type="submit" class="btn btn-sm btn-success">Save</button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-sm btn-secondary" disabled>Cancel</button>
                                    <button type="submit" class="btn btn-sm btn-secondary" disabled>Saving...</button>
                                }
                            </div>
                        </div>
                    </div>

                </div>
            </EditForm>
        </div>
        <div class="col-sm-6 ms-auto">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Id</th>
                        <th>Name</th>
                        <th></th>
                    </tr>
                </thead>
                @if(_categories.Length == 0)
                {
                    <tr>
                        <td colspan="4" class="text-center">
                            <p class="text-danger h5">No categories available</p>
                        </td>
                    </tr>
                }
                else
                {
                    int number = 1;
                    @foreach (var category in _categories)
                    {
                        <tr>
                            <td>@(number++)</td>
                            <td>@category.Id</td>
                            <td>@category.Name</td>
                            <td><button type="button" class="btn btn-sm btn-primary" @onclick="() => OnEditCategory(category)">Edit</button></td>
                        </tr>
                    }
                }
            </table>
        </div> 
    </div>
</div>

@code {
    private CategoryDto[] _categories = [];
    private CategoryDto _category = new();
    private bool _isBusy;
    private string? _errorMessage;
    protected override async Task OnInitializedAsync() => await LoadCategoriesAsync();
    private async Task LoadCategoriesAsync()
    {
        _categories = await CategoryApi.GetCategoriesAsync();
    }
    private void OnEditCategory(CategoryDto category)
    {
        _category = category;
    }
    private async Task SaveCategoryAsync()
    {
        try
        {
            _isBusy = true;
            var response = await CategoryApi.SaveCategoryAsync(_category);
            if (!response.IsSuccess)
            {
                // Error alert or error message on UI
                _errorMessage = response.ErrorMessage ?? "Unknown error in saving category";
                return;
            }
            // Reset the form
            // Reload the categories
            _category = new();
            await LoadCategoriesAsync();
        }
        catch(Exception ex)
        {
            _errorMessage = ex.Message; 
        }
        finally
        {
            _isBusy = false;
        }
    }
}
