    private async Task OnAudioFileChanged(IBrowserFile? file)
    {
        _selectedAudioFile = file;
        StateHasChanged();
    }

    private async Task RemoveAudioAsync()
    {
        if (_quiz.Id == Guid.Empty || string.IsNullOrEmpty(_quiz.AudioPath)) return;

        // In a real implementation, you would call an API to remove the audio file from the server
        // For now, just clear the local property
        _quiz.AudioPath = null;
        StateHasChanged();
    }

    private async Task RemoveQuestionAudioAsync(QuestionDto question)
    {
        if (question.Id == 0 || string.IsNullOrEmpty(question.AudioPath)) return;

        // In a real implementation, you would call an API to remove the audio file from the server
        // For now, just clear the local property
        question.AudioPath = null;
        StateHasChanged();
    }